Алгоритм  оточення
       1.Пўдготувати масив Work
                     A)Скопўювати масив Original в  масив  Work
                     Б)Знищити  в  масивў  Work  всў лўнў∙ оточення
       2.Перевўрити чи можливе   оточення
       Примўтка:
У  змўнних  XPot  ў  YPot  на  початку  роботи  функцўй
зберўгаються  координати  останньо∙  поставлено∙  точки.Очевидно, що вона буде
початком  контуру  оточення  (  контур  оточення  -  точки  якў беруть участь в
оточеннў ).Перевўрку  можливостў оточення здўснюї пара рекурсивних функўй
VRound_1   ў   Connect,запускаїться ж перевўрка можливостў оточення викликом
функцў∙  VRound яка зберўгаї значення змўнних XPot ў YPot оскўльки функцў∙
VRound_1 ў Connect в процесў роботи змўнюють значення цих змўнних.Функцў∙
VRound_1 та Connect видўленў в окремў модулў тому що для програми або модуля
пўд стек видўляїться всього 64 Кб пам'ятў чого для перевўрки можливостў
оточення при великому контурў оточення може виявитись недостатньо.Параметрами
VRound_1 та Connect ї вектори напрямку перевўрки( 1,0-праворуч, 0,-1-вниз, 1,
1-вгору ў праворуч, ў т.д.).Функцў∙ VRound_1 та Connect здўйснюють оточення в
масивў Work який ї копўїю Original тўльки без лўнўй що сполучають точки.
           ( VRound_1 )
            А)Поки вектор напрямку не опише коло робити
                   (Сonnect)
                   А1)Connect:=False
                   Б1)Якщо на даному напрямку ї своя точка яка не з'їднана ў
не вўдокремлена лўнўями тодў:
                        а) сполучити ∙∙
                        б) перемўстити вказўвник XPot YPot на дану точку
                        в)викликати VRound_1 з вектором що вказуватиме на
попередню точку
                        г)якщо VRound_1=True тодў ў Connect:=True
                   (Кўнець Connect)
                   В1)Якщо Connect=True то ви хўд з циклу
            Б)Якщо кўлькўсть лўнўй якими з'їднана точка менше двох зробити
крок назад(тобто знищити дану точку ў перемўститись на попередню)
            В)Якщо кўлькўсть лўнўй якими з'їднана точка не дорўвнюї двом тодў
VRound_1:=False.
                 Цей алгоритм перевўряї чи можливе оточення починаючи з
заданого напрямку.Вўн знаходить оточення,але не обов'язково максимальне
(максимальне оточення отримаїмо тодў коли початковий напрямок перевўрки буде
поза майбутнўм оточенням).Тодў як алгоритму для обробки оточено∙ частини
масиву необхўдно щоб оточення було максимальним.Отже основна пўдпрограма для
знаходження максимального оточення працюї наступним чином.

            А)Вона здўйснюї оточення для кожного напрямку ў знаходить
максимальне.
            Б)Якщо оточення не здўйснене то вихўд з пўдпрограми з сигналом про
неможливўсть оточення.
            В)Якщо кўлькўсть оточених точок дорўвнюї нулю то координати
оточених порожнўх мўсць заносяться в стек (WorkSubStack),координати початку
оточення ў WorkSubStack заносяться у ўнший стек(WorkStack),а самў оточенў
порожнў мўсця маркуються спецўальним символом(EmergyPlase)

            Г)Якщо ж кўлькўсть оточених точок не дорўвнюї нулю то:
                   а)всў порожнў оточенў мўсця маркуються спецўальним
символом(RoundedEmptyPlase),При пўдрахунку очок цей символ приймаїться як
порожнї мўсце,а при здўйсненнў ходу,як зайняте точкою.
                   б)оточена область копўюїться в оригўнальний масив(Original)
            Д)Вихўд з пўдпрограми з сигналом про здўйснене оточення
         3.Якщо можливе то вўдобразити його графўчно також пўдрахувати очки
гравцўв ў вивести ∙х на екран